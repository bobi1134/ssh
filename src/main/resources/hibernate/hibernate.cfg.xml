<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!--
			数据库方言
			不同的数据库，在sql语句的设计上是存在差异的，就好比不同地方的人说不同的方言。
		-->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>
		<!-- 显示sql语句 -->
		<property name="hibernate.show_sql">true</property>
		<!-- 格式化sql语句 -->
		<property name="hibernate.format_sql">true</property>
		
		<!--
			自动创建 | 更新 | 验证数据库表结构
			create(每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因)
			create-drop(每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除)
			update(最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会)
			validate(每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值)
		-->
		<property name="hibernate.hbm2ddl.auto">update</property>

		<!--
			映射文件（xml形式）
		-->
		<mapping resource="cn/mrx/ssh/model/User.hbm.xml"/>
		<mapping resource="cn/mrx/ssh/model/Role.hbm.xml"/>
		<!--
			映射文件（注解形式）
			<mapping class="cn.mrx.ssh.model.Role"/>
		-->
	</session-factory>
</hibernate-configuration>